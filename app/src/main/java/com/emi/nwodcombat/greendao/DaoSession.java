package com.emi.nwodcombat.greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.emi.nwodcombat.model.db.Character;
import com.emi.nwodcombat.model.db.Vice;
import com.emi.nwodcombat.model.db.Virtue;
import com.emi.nwodcombat.model.db.CharacterVices;
import com.emi.nwodcombat.model.db.CharacterVirtues;

import com.emi.nwodcombat.greendao.CharacterDao;
import com.emi.nwodcombat.greendao.ViceDao;
import com.emi.nwodcombat.greendao.VirtueDao;
import com.emi.nwodcombat.greendao.CharacterVicesDao;
import com.emi.nwodcombat.greendao.CharacterVirtuesDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig characterDaoConfig;
    private final DaoConfig viceDaoConfig;
    private final DaoConfig virtueDaoConfig;
    private final DaoConfig characterVicesDaoConfig;
    private final DaoConfig characterVirtuesDaoConfig;

    private final CharacterDao characterDao;
    private final ViceDao viceDao;
    private final VirtueDao virtueDao;
    private final CharacterVicesDao characterVicesDao;
    private final CharacterVirtuesDao characterVirtuesDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        characterDaoConfig = daoConfigMap.get(CharacterDao.class).clone();
        characterDaoConfig.initIdentityScope(type);

        viceDaoConfig = daoConfigMap.get(ViceDao.class).clone();
        viceDaoConfig.initIdentityScope(type);

        virtueDaoConfig = daoConfigMap.get(VirtueDao.class).clone();
        virtueDaoConfig.initIdentityScope(type);

        characterVicesDaoConfig = daoConfigMap.get(CharacterVicesDao.class).clone();
        characterVicesDaoConfig.initIdentityScope(type);

        characterVirtuesDaoConfig = daoConfigMap.get(CharacterVirtuesDao.class).clone();
        characterVirtuesDaoConfig.initIdentityScope(type);

        characterDao = new CharacterDao(characterDaoConfig, this);
        viceDao = new ViceDao(viceDaoConfig, this);
        virtueDao = new VirtueDao(virtueDaoConfig, this);
        characterVicesDao = new CharacterVicesDao(characterVicesDaoConfig, this);
        characterVirtuesDao = new CharacterVirtuesDao(characterVirtuesDaoConfig, this);

        registerDao(Character.class, characterDao);
        registerDao(Vice.class, viceDao);
        registerDao(Virtue.class, virtueDao);
        registerDao(CharacterVices.class, characterVicesDao);
        registerDao(CharacterVirtues.class, characterVirtuesDao);
    }
    
    public void clear() {
        characterDaoConfig.getIdentityScope().clear();
        viceDaoConfig.getIdentityScope().clear();
        virtueDaoConfig.getIdentityScope().clear();
        characterVicesDaoConfig.getIdentityScope().clear();
        characterVirtuesDaoConfig.getIdentityScope().clear();
    }

    public CharacterDao getCharacterDao() {
        return characterDao;
    }

    public ViceDao getViceDao() {
        return viceDao;
    }

    public VirtueDao getVirtueDao() {
        return virtueDao;
    }

    public CharacterVicesDao getCharacterVicesDao() {
        return characterVicesDao;
    }

    public CharacterVirtuesDao getCharacterVirtuesDao() {
        return characterVirtuesDao;
    }

}
