diff --git a/app/src/main/java/com/emi/nwodcombat/characterwizard/adapters/CharacterWizardPagerAdapter.java b/app/src/main/java/com/emi/nwodcombat/characterwizard/adapters/CharacterWizardPagerAdapter.java
new file mode 100644
index 0000000..71bc15d
--- /dev/null
+++ b/app/src/main/java/com/emi/nwodcombat/characterwizard/adapters/CharacterWizardPagerAdapter.java
@@ -0,0 +1,40 @@
+package com.emi.nwodcombat.characterwizard.adapters;
+
+
+import android.app.FragmentManager;
+import android.support.v13.app.FragmentStatePagerAdapter;
+
+import com.emi.nwodcombat.characterwizard.steps.PagerFragment;
+
+import java.util.List;
+
+/**
+ * Created by Emi on 3/3/16.
+ */
+public class CharacterWizardPagerAdapter extends FragmentStatePagerAdapter {
+    private List<Class<? extends PagerFragment>> fragmentClasses;
+//    private List<PagerStep> fragments;
+
+    public CharacterWizardPagerAdapter(FragmentManager fm, List<Class<? extends PagerFragment>> fragmentClasses) {
+        super(fm);
+        this.fragmentClasses = fragmentClasses;
+    }
+
+    @Override
+    public PagerFragment getItem(int position) {
+        try {
+            return fragmentClasses.get(position).newInstance();
+        } catch (InstantiationException e) {
+            e.printStackTrace();
+        } catch (IllegalAccessException e) {
+            e.printStackTrace();
+        }
+
+        return null;
+    }
+
+    @Override
+    public int getCount() {
+        return this.fragmentClasses.size();
+    }
+}
diff --git a/app/src/main/java/com/emi/nwodcombat/characterwizard/adapters/SpecialtyAdapter.java b/app/src/main/java/com/emi/nwodcombat/characterwizard/adapters/SpecialtyAdapter.java
new file mode 100644
index 0000000..a5a3427
--- /dev/null
+++ b/app/src/main/java/com/emi/nwodcombat/characterwizard/adapters/SpecialtyAdapter.java
@@ -0,0 +1,56 @@
+package com.emi.nwodcombat.characterwizard.adapters;
+
+import android.app.Activity;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.emi.nwodcombat.R;
+import com.emi.nwodcombat.model.realm.Entry;
+import com.squareup.otto.Bus;
+
+import butterknife.Bind;
+import butterknife.ButterKnife;
+import io.realm.RealmBasedRecyclerViewAdapter;
+import io.realm.RealmResults;
+import io.realm.RealmViewHolder;
+
+/**
+ * Created by emiliano.desantis on 03/06/2016.
+ */
+public class SpecialtyAdapter extends RealmBasedRecyclerViewAdapter<Entry, SpecialtyAdapter.ViewHolder>{
+    private Activity activity;
+    private int idLayout;
+    private Bus bus;
+
+    public SpecialtyAdapter(RealmResults<Entry> specialties, Activity activity, int idLayout, boolean automaticUpdate, boolean animateIdType, Bus bus) {
+        super (activity, specialties, automaticUpdate, animateIdType);
+        this.activity = activity;
+        this.idLayout = idLayout;
+        this.bus = bus;
+    }
+
+    @Override
+    public ViewHolder onCreateRealmViewHolder(ViewGroup parent, int i) {
+        LayoutInflater inflater = LayoutInflater.from(activity);
+        final View view = inflater.inflate(idLayout, parent, false);
+        return new ViewHolder(view);
+    }
+
+    @Override
+    public void onBindRealmViewHolder(ViewHolder viewHolder, int position) {
+        Entry specialty = realmResults.get(position);
+//        final Long id = specialty.getId();
+        viewHolder.rowSpecialtyName.setText(specialty.getValue());
+    }
+
+    public class ViewHolder extends RealmViewHolder {
+        @Bind(R.id.rowSpecialtyName) TextView rowSpecialtyName;
+
+        public ViewHolder(View itemView) {
+            super(itemView);
+            ButterKnife.bind(this, itemView);
+        }
+    }
+}
diff --git a/app/src/main/java/com/emi/nwodcombat/characterwizard/dialogs/AddSpecialtyDialog.java b/app/src/main/java/com/emi/nwodcombat/characterwizard/dialogs/AddSpecialtyDialog.java
new file mode 100644
index 0000000..f975e99
--- /dev/null
+++ b/app/src/main/java/com/emi/nwodcombat/characterwizard/dialogs/AddSpecialtyDialog.java
@@ -0,0 +1,119 @@
+package com.emi.nwodcombat.characterwizard.dialogs;
+
+import android.app.AlertDialog;
+import android.app.Dialog;
+import android.app.DialogFragment;
+import android.content.DialogInterface;
+import android.os.Bundle;
+import android.view.KeyEvent;
+import android.view.LayoutInflater;
+import android.view.inputmethod.EditorInfo;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+import com.emi.nwodcombat.R;
+import com.emi.nwodcombat.characterwizard.adapters.SpecialtyAdapter;
+import com.emi.nwodcombat.characterwizard.mvp.CharacterWizardModel;
+import com.emi.nwodcombat.model.realm.Entry;
+import com.emi.nwodcombat.utils.BusProvider;
+
+import butterknife.Bind;
+import butterknife.ButterKnife;
+import co.moonmonkeylabs.realmrecyclerview.RealmRecyclerView;
+import io.realm.RealmList;
+
+/**
+ * Created by emiliano.desantis on 03/06/2016.
+ */
+public class AddSpecialtyDialog extends DialogFragment {
+    @Bind(R.id.editSpecialtyName) EditText editSpecialtyName;
+    @Bind(R.id.rvDialogSpecialties) RealmRecyclerView rvDialogSpecialties;
+
+    private String title;
+    private String key;
+
+    private CharacterWizardModel model;
+
+    AlertDialog dialog;
+    private SpecialtyAdapter specialtyAdapter;
+
+    public static AddSpecialtyDialog newInstance(String title, String key, CharacterWizardModel model) {
+        AddSpecialtyDialog fragment = new AddSpecialtyDialog();
+        fragment.title = title;
+        fragment.key = key;
+        fragment.model = model;
+        return fragment;
+    }
+
+    public Dialog onCreateDialog(Bundle savedInstanceState) {
+        LayoutInflater inflater = LayoutInflater.from(getActivity());
+        LinearLayout root = (LinearLayout) inflater.inflate(getLayout(), null);
+        ButterKnife.bind(this, root);
+
+        specialtyAdapter = new SpecialtyAdapter(null, getActivity(), R.layout.row_specialty, true, false,
+            BusProvider.getInstance());
+
+        fillAdapter(model.getSpecialties(key));
+
+        rvDialogSpecialties.setAdapter(specialtyAdapter);
+
+        editSpecialtyName.setOnEditorActionListener(new TextView.OnEditorActionListener() {
+            @Override
+            public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {
+                if (actionId == EditorInfo.IME_ACTION_DONE) {
+                    // TODO Code model addition of new specialty
+                    model.addSpecialty(key, editSpecialtyName.getText().toString());
+                    return true;
+                }
+                return false;
+            }
+        });
+
+        AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(getActivity());
+
+        alertDialogBuilder.setView(root);
+
+        alertDialogBuilder.setPositiveButton("OK", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                dismiss();
+            }
+        });
+
+        alertDialogBuilder.setTitle(title);
+
+        dialog = alertDialogBuilder.create();
+
+        dialog.setOnShowListener(new DialogInterface.OnShowListener() {
+            @Override
+            public void onShow(DialogInterface dialogInterface) {
+                Button positive = dialog.getButton(AlertDialog.BUTTON_POSITIVE);
+                positive.setEnabled(false);
+            }
+        });
+
+        return dialog;
+    }
+
+    private void fillAdapter(RealmList<Entry> specialties) {
+        try {
+            specialtyAdapter.updateRealmResults(specialties.where().findAll());
+        } catch (NoSuchMethodError e) {
+            e.printStackTrace();
+        }
+
+    }
+
+    @Override
+    public void onDestroyView() {
+        super.onDestroyView();
+        ButterKnife.unbind(this);
+    }
+
+    public int getLayout() {
+        return R.layout.dialog_new_specialty;
+    }
+
+}
diff --git a/app/src/main/res/drawable/star.xml b/app/src/main/res/drawable/star.xml
new file mode 100644
index 0000000..e1478a8
--- /dev/null
+++ b/app/src/main/res/drawable/star.xml
@@ -0,0 +1,4 @@
+<vector android:height="48dp" android:viewportHeight="24.0"
+    android:viewportWidth="24.0" android:width="48dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z"/>
+</vector>
diff --git a/app/src/main/res/drawable/star_outline.xml b/app/src/main/res/drawable/star_outline.xml
new file mode 100644
index 0000000..c180dd8
--- /dev/null
+++ b/app/src/main/res/drawable/star_outline.xml
@@ -0,0 +1,4 @@
+<vector android:height="48dp" android:viewportHeight="24.0"
+    android:viewportWidth="24.0" android:width="48dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M12,15.39L8.24,17.66L9.23,13.38L5.91,10.5L10.29,10.13L12,6.09L13.71,10.13L18.09,10.5L14.77,13.38L15.76,17.66M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z"/>
+</vector>
diff --git a/app/src/main/res/layout/dialog_new_specialty.xml b/app/src/main/res/layout/dialog_new_specialty.xml
new file mode 100644
index 0000000..fb78a8e
--- /dev/null
+++ b/app/src/main/res/layout/dialog_new_specialty.xml
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+              xmlns:app="http://schemas.android.com/apk/res-auto"
+              android:orientation="vertical"
+              android:layout_width="match_parent"
+              android:layout_height="match_parent">
+
+    <EditText
+        android:id="@+id/editSpecialtyName"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_margin="@dimen/spacing_large"
+        android:hint="@string/hint_type_specialty_name"
+        android:inputType="text"
+        android:imeOptions="actionDone"/>
+
+    <co.moonmonkeylabs.realmrecyclerview.RealmRecyclerView
+        android:id="@+id/rvDialogSpecialties"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        android:layout_weight="1"
+        app:rrvIsRefreshable="true"
+        app:rrvLayoutType="LinearLayout">
+
+    </co.moonmonkeylabs.realmrecyclerview.RealmRecyclerView>
+
+</LinearLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/row_specialty.xml b/app/src/main/res/layout/row_specialty.xml
new file mode 100644
index 0000000..e6bfa7d
--- /dev/null
+++ b/app/src/main/res/layout/row_specialty.xml
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+              android:orientation="horizontal"
+              android:layout_width="match_parent"
+              android:layout_height="wrap_content"
+              android:layout_margin="@dimen/spacing_normal"
+              android:layout_gravity="center">
+    <TextView
+        android:id="@+id/rowSpecialtyName"
+        android:text="Name:"
+        android:layout_marginRight="@dimen/spacing_normal"
+        android:layout_marginEnd="@dimen/spacing_normal"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:gravity="center"/>
+
+</LinearLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/rv_specialties_empty.xml b/app/src/main/res/layout/rv_specialties_empty.xml
new file mode 100644
index 0000000..eebab03
--- /dev/null
+++ b/app/src/main/res/layout/rv_specialties_empty.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:gravity="center"
+        android:text="@string/rv_merits_notice_empty"/>
+</FrameLayout>
\ No newline at end of file
